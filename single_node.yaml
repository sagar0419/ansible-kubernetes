- hosts: "master"
  tasks:
   - name: Change the hostname to our standard
     hostname:
       name: "{{ new_hostname  }}"

   - name: 'Add hostname to /etc/hosts'
     lineinfile:
       path: /etc/hosts
       regexp: '^127\.0\.0\.1[ \t]+localhost'
       line: '127.0.0.1 localhost {{ new_hostname  }}'
       state: present

- hosts: "master"
  gather_facts: yes
  tasks:
   - name: Making Swap memory inactive on server
     command: swapoff -a

   - name: Remove Swap entry from /etc/fstab of server
     lineinfile:
       dest: /etc/fstab
       regexp: swap
       state: absent

   - name: Installing Prerequisites for Kubernetes installation
     apt: 
       name:
         - apt-transport-https
         - ca-certificates
         - curl
         - gnupg-agent
         - vim
         - software-properties-common
       state: present

   - name: Adding Dockerâ€™s official GPG key on the server
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present

   - name: Adding Docker Repository on server
     apt_repository:
       repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
       state: present

   - name: Installing Docker Engine.
     apt: 
       name:
         - docker-ce
         - docker-ce-cli
         - containerd.io
       state: present

   - name: Enable service docker, and enable persistently
     service: 
       name: docker
       enabled: yes

   - name: Adding Google official GPG key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present

   - name: Adding Kubernetes Repository
     apt_repository:
       repo: deb http://apt.kubernetes.io/ kubernetes-xenial main 
       state: present

   - name: Installing Kubernetes Cluster Packages.
     apt: 
       name:
         - kubeadm
         - kubectl
         - kubelet
       state: present

   - name: create daemon file for cgroup
     raw: touch /etc/docker/daemon.json       
       
   - name: change cgroup
     lineinfile:
       path: /etc/docker/daemon.json
       line: '{  
                "exec-opts": ["native.cgroupdriver=systemd"] 
               }'

   - name: change cgroup
     command: service docker restart && service kubelet restart

   - name: Enable service kubelet, and enable persistently
     service:
       name: kubelet
       enabled: yes          


   - name: restart service docker
     command:  service docker restart


   - name: Intilizing Kubernetes Cluster
     command: kubeadm init --pod-network-cidr=10.244.0.0/16

   - pause: seconds=30

   - name: Create directory for kube config.
     become_user: root
     shell: |
       mkdir -p ~/.kube
       cp -i /etc/kubernetes/admin.conf ~/.kube/config
       chown $(id -u):$(id -g) ~/.kube/config

   - name: setting ENV variable for kubernetes
     lineinfile: dest=/root/.bashrc line='export KUBECONFIG=/etc/kubernetes/admin.conf' insertafter='EOF'  state=present

   - name: ENV variable for kubernetes
     shell: . /root/.bashrc

   - name: Install Network Add-on
     command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

   - name: removeing taint
     command: kubectl taint nodes --all node-role.kubernetes.io/master-

   - name: get join command
     shell: kubeadm token create --print-join-command
     register: join_command_raw


   - name: set join command
     set_fact:
       join_command: "{{ join_command_raw.stdout_lines[0] + '--ignore-preflight-errors=all' }}"

   - name:  download curl
     command: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3

   - name: change mode of file
     command:  chmod 700 get_helm.sh

   - name: install helm
     command: ./get_helm.sh

   - name: add helm repo prometheus
     command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

   - name: add helm chart
     command:  helm repo add stable https://charts.helm.sh/stable

   - name: helm repo update
     command: helm repo update

   - name: install prometheus
     command: helm install prometheus prometheus-community/kube-prometheus-stack

   - name: copy jenkins file to remote server
     copy:
       src: ./jenkins.yaml
       dest: /tmp/

   - name: install jenkins
     command: kubectl create -f /tmp/jenkins.yaml

